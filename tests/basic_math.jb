var v1 = 1 + 1.0, v2 = 1 - 1.0, v3 = 1 * 1.0, v4 = 1 / 1.0,
  v5 = 1 % 1.0, v6 = 1 == 1.0, v7 = 1 > 1.0, v8 = 1 < 1.0,
  v9 = 1 >= 1.0, v10 = 1 <= 1.0;
assert(v1 == 2); assert(v2 == 0); assert(v3 == 1); assert(v4 == 1);
assert(v5 == 0); assert(v6 == true); assert(v7 == false); assert(v8 == false);
assert(v9 == true); assert(v10 == true);
var f1 = 1.0 + 1, f2 = 1.0 - 1, f3 = 1.0 * 1, f4 = 1.0 / 1,
  f5 = 1.0 % 1, f6 = 1.0 == 1, f7 = 1.0 > 1, f8 = 1.0 < 1,
  f9 = 1.0 >= 1, f10 = 1.0 <= 1;
assert(f1 == 2); assert(f2 == 0); assert(f3 == 1); assert(f4 == 1);
assert(f5 == 0.0); assert(f6 == true); assert(f7 == false); assert(f8 == false);
assert(f9 == true); assert(f10 == true);


function assert_almost_equal(a, b) {
  assert(a - b > -0.0001 && a - b < 0.0001);
}

{
  var pi = 3.1415926538;
  var s = Math.sin(pi), c = Math.cos(pi), t = Math.tan(pi), l = Math.log(2.718281828 /* and so on */);
  var sq = Math.sqrt(25.0), p = Math.pow(3.0, 3.0);
  assert_almost_equal(s, 0);
  assert_almost_equal(c, -1);
  assert_almost_equal(t, 0);
  assert_almost_equal(l, 1);
  assert_almost_equal(sq, 5);
  assert_almost_equal(p, 27);

  assert(Math.max(-3.0, -1.0) == -1);
  assert(Math.max(3.0, 1.0) == 3);
  assert(Math.min(-3.0, -1.0) == -3);
  assert(Math.min(3.0, 1.0) == 1);
}

{
  var s = Math.sin(0), c = Math.cos(0), t = Math.tan(0), l = Math.log(1);
  var sq = Math.sqrt(25), p = Math.pow(3, 3);
  assert_almost_equal(s, 0);
  assert_almost_equal(c, 1);
  assert_almost_equal(t, 0);
  assert_almost_equal(l, 0);
  assert_almost_equal(sq, 5);
  assert_almost_equal(p, 27);

  assert(Math.max(-3, -1) == -1);
  assert(Math.max(3, 1) == 3);
  assert(Math.min(-3, -1) == -3);
  assert(Math.min(3, 1) == 1);
}
